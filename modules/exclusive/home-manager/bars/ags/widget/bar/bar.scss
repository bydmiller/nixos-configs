@use 'sass:color';

$bar-spacing: $spacing * .3;
$button-radius: $radius;

@mixin panel-button($flat: true, $reactive: true) {
    @include accs-button($flat, $reactive);

    >* {
        border-radius: $button-radius;
        padding: $padding * 0.6 $padding * 0.8;
        margin: $bar-spacing;
    }

    label,
    image {
        font-weight: bold;
    }
}

.bar {
    background: #1e1e2e;
    border-radius: 14px;
    padding: 2px;

    .barLeft {
        margin: 7px 7px 7px 7px;
        background-color: #313244; //${base02};
        border: .5px solid #00384d; //${base01};
        border-radius: 15px;
        padding: 2px 2px;
    }

    .barCenter {
        margin: 7px 7px 7px 7px;
        background-color: #313244; //${base02};
        border: .5px solid #00384d; //${base01};
        border-radius: 15px;
        padding: 2px 0px 2px 0px;
    }

    .barRight {
        margin: 7px 7px 7px 7px;
        background-color: #313244; //${base02};
        border: .5px solid #00384d; //${base01};
        border-radius: 15px;
        padding: 2px 0px 2px 0px;
    }

    .panel-button {
        @include panel-button;

        &:not(.flat) {
            @include accs-button($flat: false);

            &.first>* {
                border-radius: 0px 0px $radius * 2.5 0px;
                padding: $padding * .5 $padding * 2.5;
                margin: 0 $bar-spacing 0 0;
            }

            &.last>* {
                border-radius: 0px 0px 0px $radius * 2.5;
                padding: $padding * .5 $padding * 2.5;
                margin: 0 0 0 $bar-spacing;
            }

            &.end>* {
                border-radius: 0.75 * $radius 2 * $radius 0.75 * $radius 2 * $radius;
                padding: $padding * .5 $padding * 2;
                margin: $bar-spacing;
            }

            &.start>* {
                border-radius: 2 * $radius 0.75 * $radius 2 * $radius 0.75 * $radius;
                padding: $padding * .5 $padding * 2;
                margin: $bar-spacing;
            }

            &.center>* {
                border-radius: $radius;
                padding: $padding * .5 $padding * 2;
                margin: $bar-spacing;
            }
        }
    }

    .launcher {
        .colored {
            color: transparentize($primary-bg, 0.2);
        }

        &:hover .colored {
            color: $primary-bg;
        }

        image {
            font-size: $font-size * 1.5;
        }

        &:active .colored,
        &.active .colored {
            color: $primary-fg;
        }
    }

    .media label {
        margin: 0 ($spacing)
    }

    .media-btn {
        // background-color: $widget-bg;
        background-image: none;
        border: none;
        box-shadow: none;
        padding: 0;

        label {
            font-size: $font-size * 1.3;
            margin: 0 $spacing * .5;
            color: $secondary-bg;
        }
    }

    .play-pause label {
        color: $primary-bg;
    }

    .taskbar .indicator.active {
        // background-color: $primary-bg;
        border-radius: $radius;
        min-height: 4pt;
        min-width: 6pt;
        margin: 2pt;
    }

    .powermenu.colored,
    .recorder {
        image {
            color: transparentize($error-bg, 0.3);
        }

        &:hover image {
            color: transparentize($error-bg, 0.15);
        }

        &:active image {
            color: $primary-fg;
        }
    }

    .quicksettings>box>box {
        @include spacing($spacing: if($bar-spacing==0, $padding / 2, $bar-spacing * 2));
    }

    .quicksettings:not(.active):not(:active) {
        .bluetooth {
            color: $primary-bg;

            label {
                font-size: $font-size * .7;
                color: $fg;
                text-shadow: $text-shadow;
            }
        }
    }

    .battery-bar {
        >* {
            padding: 0;
        }

        &.bar-hidden>box {
            padding: 0 $spacing * .5;

            image {
                margin: 0;
            }
        }

        levelbar * {
            all: unset;
            transition: $transition;
        }

        .whole {
            @if $shadows {
                image {
                    -gtk-icon-shadow: $text-shadow;
                }

                label {
                    text-shadow: $text-shadow;
                }
            }
        }

        .regular image {
            margin-left: $spacing * .5;
        }

        trough {
            @include widget;
            min-height: 12pt;
            min-width: 12pt;
        }

        .regular trough {
            margin-right: $spacing * .5;
        }

        block {
            margin: 0;

            &:last-child {
                border-radius: 0 $button-radius $button-radius 0;
            }

            &:first-child {
                border-radius: $button-radius 0 0 $button-radius;
            }
        }

        .vertical {
            block {
                &:last-child {
                    border-radius: 0 0 $button-radius $button-radius;
                }

                &:first-child {
                    border-radius: $button-radius $button-radius 0 0;
                }
            }

        }

        &.low image {
            color: $error-bg
        }

        &.charging image {
            color: $charging-bg
        }

        &:active image {
            color: $primary-fg
        }
    }
}
